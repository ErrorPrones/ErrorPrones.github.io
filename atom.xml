<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>菜鸟爆炒好</title>
  
  <subtitle>清蒸好像也不错</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-08-13T01:40:39.090Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>菜鸟想飞的很高</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SpringBoot整合Shiro</title>
    <link href="http://yoursite.com/2019/08/13/springBoot%E6%95%B4%E5%90%88Shiro-%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B/"/>
    <id>http://yoursite.com/2019/08/13/springBoot整合Shiro-进阶教程/</id>
    <published>2019-08-13T05:30:42.000Z</published>
    <updated>2019-08-13T01:40:39.090Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h2 id="分析Shiro的核心API"><a href="#分析Shiro的核心API" class="headerlink" title="分析Shiro的核心API"></a>分析Shiro的核心API</h2><ul><li><p>Suject: 用户主体(认证,  授权等方法)</p></li><li><p>SecurityManager: 安全管理器</p></li><li><p>Realm: Shiro连接数据库的桥梁</p><p>这三个核心的API他们存在一种关系, <strong>Subject关联SecurityManager, 把操作交给SecurityManager, SecurityManager关联Realm, 将认证信息或授权信息进行与数据库或缓存的连接认证</strong></p></li></ul><a id="more"></a><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><p><img src="/2019/08/13/springBoot整合Shiro-进阶教程/20190629092851153.png" alt="在这里插入图片描述"></p><h2 id="pom-xml文件"><a href="#pom-xml文件" class="headerlink" title="pom.xml文件"></a>pom.xml文件</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.shiro<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>shiro-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="yml文件"><a href="#yml文件" class="headerlink" title="yml文件"></a>yml文件</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  datasource:</span></span><br><span class="line"><span class="attr">    password:</span> <span class="number">123456</span></span><br><span class="line"><span class="attr">    driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="attr">    url:</span> <span class="attr">jdbc:mysql://localhost:3306/test?useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=UTC</span></span><br><span class="line"><span class="attr">    username:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">mybatis:</span></span><br><span class="line"><span class="attr">  configuration:</span></span><br><span class="line"><span class="attr">    auto-mapping-behavior:</span> <span class="string">full</span></span><br><span class="line"><span class="attr">  mapper-locations:</span> <span class="string">classpath*:mapper/**/*.xml</span></span><br><span class="line"><span class="attr">  type-aliases-package:</span> <span class="string">com.lijiajun.entity</span></span><br></pre></td></tr></table></figure><h2 id="common下的shiro包"><a href="#common下的shiro包" class="headerlink" title="common下的shiro包"></a>common下的shiro包</h2><p><strong>shiroConfig类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ShiroConfig</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建ShiroFilterFactoryBean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span>(name = <span class="string">"factoryBean"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ShiroFilterFactoryBean <span class="title">shirFilter</span><span class="params">(@Qualifier(<span class="string">"securityManager"</span>)</span>DefaultWebSecurityManager securityManager) </span>&#123;</span><br><span class="line">        ShiroFilterFactoryBean factoryBean = <span class="keyword">new</span> ShiroFilterFactoryBean();</span><br><span class="line">        <span class="comment">//设置安全管理  这个属性是必须的。</span></span><br><span class="line">        factoryBean.setSecurityManager(securityManager);</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        Shiro内置过滤器, 可以实现权限相关的拦截器</span></span><br><span class="line"><span class="comment">        常用的过滤器:</span></span><br><span class="line"><span class="comment">           anon:表示可以匿名使用。 </span></span><br><span class="line"><span class="comment">           authc:表示需要认证(登录)才能使用，没有参数 </span></span><br><span class="line"><span class="comment">           roles：参数可以写多个，多个时必须加上引号，并且参数之间用逗号分割，当有多个参数时，例如admins/user/**=roles["admin,guest"]</span></span><br><span class="line"><span class="comment">           每个参数通过才算通过，相当于hasAllRoles()方法。 </span></span><br><span class="line"><span class="comment">           perms：参数可以写多个，多个时必须加上引号，并且参数之间用逗号分割，例如/admins/user/**=perms["user:add:*,user:modify:*"]</span></span><br><span class="line"><span class="comment">           当有多个参数时必须每个参数都通过才通过，想当于isPermitedAll()方法。 </span></span><br><span class="line"><span class="comment">           rest：根据请求的方法，相当于/admins/user/**=perms[user:method] ,其中method为post，get，delete等。 </span></span><br><span class="line"><span class="comment">           port：当请求的url的端口不是8081是跳转到schemal://serverName:8081?queryString,其中schmal是协议http或https等</span></span><br><span class="line"><span class="comment">           serverName是你访问的host,8081是url配置里port的端口，queryString是你访问的url里的？后面的参数。 </span></span><br><span class="line"><span class="comment">           authcBasic：没有参数表示httpBasic认证 </span></span><br><span class="line"><span class="comment">           ssl:表示安全的url请求，协议为https </span></span><br><span class="line"><span class="comment">           user:当登入操作时不做检查</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"><span class="comment">//        有序map</span></span><br><span class="line">        Map&lt;String,String&gt; filterMap = <span class="keyword">new</span> LinkedHashMap&lt;&gt;();</span><br><span class="line"><span class="comment">//        拦截请求,未登录不可访问</span></span><br><span class="line">        filterMap.put(<span class="string">"/userDelete"</span>,<span class="string">"authc"</span>);</span><br><span class="line">        filterMap.put(<span class="string">"/userAdd"</span>,<span class="string">"authc"</span>);</span><br><span class="line">        filterMap.put(<span class="string">"/userInfo"</span>,<span class="string">"authc"</span>);</span><br><span class="line"><span class="comment">//        放行请求</span></span><br><span class="line"><span class="comment">//        filterMap.put("/test","anon");</span></span><br><span class="line"><span class="comment">//        filterMap.put("/login","anon");</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//授权过滤器  注意: 当授权拦截就, shiro会自动跳转到未授权的页面</span></span><br><span class="line"><span class="comment">//        filterMap.put("/add","perms[user:add]");</span></span><br><span class="line"><span class="comment">//        filterMap.put("/update","perms[user:update]");</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        登出操作</span></span><br><span class="line">        filterMap.put(<span class="string">"/logout"</span>, <span class="string">"logout"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//        统一过滤  注意 这个需要写在最后</span></span><br><span class="line"><span class="comment">//        filterMap.put("/*","authc");</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        loginUrl ：没有登录的用户请求需要登录的页面时自动跳转到登录页面，不是必须的属性</span></span><br><span class="line"><span class="comment">                    不输入地址的话会自动寻找项目web项目的根目录下的”/login.jsp”页面。</span></span><br><span class="line"><span class="comment">        successUrl ：登录成功默认跳转页面，不配置则跳转至”/”。如果登陆前点击的一个需要登录的页面</span></span><br><span class="line"><span class="comment">                    则在登录自动跳转到那个需要登录的页面。不跳转到此。</span></span><br><span class="line"><span class="comment">        unauthorizedUrl ：没有权限默认跳转的页面</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        factoryBean.setLoginUrl(<span class="string">"/toLogin"</span>);</span><br><span class="line">        factoryBean.setSuccessUrl(<span class="string">"/test"</span>);</span><br><span class="line"><span class="comment">//        此处因为类型原因,所以自定义了一个类来处理未授权跳转的页面 MyException</span></span><br><span class="line"><span class="comment">//        factoryBean.setUnauthorizedUrl("/noAuth");</span></span><br><span class="line"></span><br><span class="line">        factoryBean.setFilterChainDefinitionMap(filterMap);</span><br><span class="line">        <span class="keyword">return</span> factoryBean;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建Realm</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span>(name = <span class="string">"userRealm"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> UserRealm <span class="title">getRealm</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> UserRealm();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建DefaultWebSecurityManager</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span>(name = <span class="string">"securityManager"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> DefaultWebSecurityManager <span class="title">getDefaultWebSecurityManager</span><span class="params">(@Qualifier(<span class="string">"userRealm"</span>)</span> UserRealm userRealm)</span>&#123;</span><br><span class="line">        DefaultWebSecurityManager securityManager = <span class="keyword">new</span> DefaultWebSecurityManager();</span><br><span class="line">        <span class="comment">//关联realm</span></span><br><span class="line">        securityManager.setRealm(userRealm);</span><br><span class="line">        <span class="keyword">return</span> securityManager;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *  开启Shiro的注解(如<span class="doctag">@RequiresRoles</span>,<span class="doctag">@RequiresPermissions</span>),需借助SpringAOP扫描使用Shiro注解的类,并在必要时进行安全逻辑验证</span></span><br><span class="line"><span class="comment">     * 配置以下两个bean(DefaultAdvisorAutoProxyCreator和AuthorizationAttributeSourceAdvisor)即可实现此功能</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DefaultAdvisorAutoProxyCreator <span class="title">advisorAutoProxyCreator</span><span class="params">()</span></span>&#123;</span><br><span class="line">        DefaultAdvisorAutoProxyCreator advisorAutoProxyCreator = <span class="keyword">new</span> DefaultAdvisorAutoProxyCreator();</span><br><span class="line">        advisorAutoProxyCreator.setProxyTargetClass(<span class="keyword">true</span>);</span><br><span class="line">        <span class="keyword">return</span> advisorAutoProxyCreator;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 开启aop注解支持</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> securityManager</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> AuthorizationAttributeSourceAdvisor <span class="title">authorizationAttributeSourceAdvisor</span><span class="params">(DefaultWebSecurityManager securityManager)</span> </span>&#123;</span><br><span class="line">        AuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor = <span class="keyword">new</span> AuthorizationAttributeSourceAdvisor();</span><br><span class="line">        authorizationAttributeSourceAdvisor.setSecurityManager(securityManager);</span><br><span class="line">        <span class="keyword">return</span> authorizationAttributeSourceAdvisor;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>UserRealm类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserRealm</span> <span class="keyword">extends</span> <span class="title">AuthorizingRealm</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用户</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 角色</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RolesService rolesService;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 权限</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> PermissionsService permissionsService;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 权限验证</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> principals</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> AuthorizationInfo <span class="title">doGetAuthorizationInfo</span><span class="params">(PrincipalCollection principals)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 能进入到这里，表示账号已经通过验证了</span></span><br><span class="line">        String username = (String) principals.getPrimaryPrincipal();</span><br><span class="line">        User user = userService.selByNameUser(username);</span><br><span class="line">        <span class="comment">//获取用户所有角色信息</span></span><br><span class="line">        Set&lt;String&gt; roleString = rolesService.selByUserIdString(user.getId());</span><br><span class="line">        <span class="comment">//查询该用户所拥有的角色</span></span><br><span class="line">        List&lt;Roles&gt; roleList = rolesService.selByUserIdRoles(user.getId());</span><br><span class="line">        <span class="comment">//查询所有角色所拥有的权限, 并保存</span></span><br><span class="line">        Set&lt;String&gt; perms = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(Roles role : roleList) &#123;</span><br><span class="line">            Set&lt;String&gt; permString = permissionsService.selByRoleIdPermission(role.getId());</span><br><span class="line">            perms.addAll(permString);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 授权对象</span></span><br><span class="line">        SimpleAuthorizationInfo info = <span class="keyword">new</span> SimpleAuthorizationInfo();</span><br><span class="line">        <span class="comment">// 把通过数据库获取到的权限保存到shiro</span></span><br><span class="line">        info.setStringPermissions(perms);</span><br><span class="line">        <span class="comment">//把通过数据库获取到的角色保存到shiro</span></span><br><span class="line">        info.setRoles(roleString);</span><br><span class="line">        <span class="keyword">return</span> info;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 身份认证</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> token</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> AuthenticationException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> AuthenticationInfo <span class="title">doGetAuthenticationInfo</span><span class="params">(AuthenticationToken token)</span> <span class="keyword">throws</span> AuthenticationException </span>&#123;</span><br><span class="line">        <span class="comment">//获取登陆的用户名和密码</span></span><br><span class="line">        UsernamePasswordToken t = (UsernamePasswordToken) token;</span><br><span class="line">        String username = token.getPrincipal().toString();</span><br><span class="line">        String password = <span class="keyword">new</span> String(t.getPassword());</span><br><span class="line">        <span class="comment">//从数据库中获取登陆的用户</span></span><br><span class="line">        User user = userService.selByNameUser(username);</span><br><span class="line">        <span class="comment">//没找到用户</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">null</span>==user) &#123;</span><br><span class="line">            <span class="keyword">throw</span>  <span class="keyword">new</span> UnknownAccountException();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//把用户输入的密码进行md5和盐加密一起运算1次</span></span><br><span class="line">        String encodedPassword = <span class="keyword">new</span> SimpleHash(<span class="string">"md5"</span>, password, user.getUsername(), <span class="number">1</span>).toString();</span><br><span class="line">        <span class="comment">//上一步加密后的密文和数据库的密文进行判断</span></span><br><span class="line">        <span class="keyword">if</span> (!user.getPassword().equals(encodedPassword)) &#123;</span><br><span class="line">            <span class="comment">//密码出错</span></span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IncorrectCredentialsException();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 认证信息里存放账号密码, getName() 是当前Realm的继承方法,通常返回当前类名 :databaseRealm</span></span><br><span class="line">        SimpleAuthenticationInfo a = <span class="keyword">new</span> SimpleAuthenticationInfo(username, password, getName());</span><br><span class="line">        <span class="comment">//清缓存中的授权信息，保证每次登陆 都可以重新授权。因为AuthorizingRealm会先检查缓存有没有 授权信息，再调用授权方法</span></span><br><span class="line">        <span class="keyword">super</span>.clearCachedAuthorizationInfo(a.getPrincipals());</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>MyException类</strong>  在shiroConfig类中已经说明了其作用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyException</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 未授权跳转</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ExceptionHandler</span>(AuthorizationException.class)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">error</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"noAuth"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">///**</span></span><br><span class="line"><span class="comment">// * 未认证跳转</span></span><br><span class="line"><span class="comment">// * @return</span></span><br><span class="line"><span class="comment">// */</span></span><br><span class="line"><span class="comment">//@ExceptionHandler(UnauthorizedException.class)</span></span><br><span class="line"><span class="comment">//public String noLogin()&#123;</span></span><br><span class="line"><span class="comment">//return "login";</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="common下的util包"><a href="#common下的util包" class="headerlink" title="common下的util包"></a>common下的util包</h2><p><strong>SetStringUtil类</strong> 将查询到的数据以set集合保存</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SetStringUtil</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询用户所拥有的角色并转换为字符串，用作shiro中的角色权限</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> list</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Set&lt;String&gt; <span class="title">listRoleConversion</span><span class="params">(List&lt;Roles&gt; list)</span></span>&#123;</span><br><span class="line">        Set&lt;String&gt; set = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(Roles role : list) &#123;</span><br><span class="line">            set.add(role.getRoleName());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> set;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询角色所拥有的权限并转换为字符串，用作shiro中的角色权限</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> list</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Set&lt;String&gt; <span class="title">listPermissionConversion</span><span class="params">(List&lt;Permissions&gt; list)</span></span>&#123;</span><br><span class="line">        Set&lt;String&gt; set = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(Permissions permission : list) &#123;</span><br><span class="line">            set.add(permission.getPermissionName());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> set;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="entity包-实体类"><a href="#entity包-实体类" class="headerlink" title="entity包(实体类)"></a>entity包(实体类)</h2><p><strong>用户</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">8974323100336176485L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>角色</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Roles</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">6341445277560423251L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> Integer userId;</span><br><span class="line">    <span class="keyword">private</span> String roleName;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>权限</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Permissions</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">6564673599295382095L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> Integer roleId;</span><br><span class="line">    <span class="keyword">private</span> String permissionName;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="mapper层"><a href="#mapper层" class="headerlink" title="mapper层"></a>mapper层</h2><p><strong>接口就不展示出来了, 我将mapper.xml贴出来</strong></p><p><strong>用户</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.lijiajun.mapper.UserMapper"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 结果映射 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"usersMap"</span> <span class="attr">type</span>=<span class="string">"com.lijiajun.entity.User"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span> <span class="attr">jdbcType</span>=<span class="string">"INTEGER"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"username"</span> <span class="attr">property</span>=<span class="string">"username"</span> <span class="attr">jdbcType</span>=<span class="string">"VARCHAR"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"password"</span> <span class="attr">property</span>=<span class="string">"password"</span> <span class="attr">jdbcType</span>=<span class="string">"VARCHAR"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selByNameUser"</span> <span class="attr">resultMap</span>=<span class="string">"usersMap"</span>&gt;</span></span><br><span class="line">        select * from users where username = #&#123;username&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>角色</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.lijiajun.mapper.RolesMapper"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 结果映射 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"userRolesMap"</span> <span class="attr">type</span>=<span class="string">"com.lijiajun.entity.Roles"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span> <span class="attr">jdbcType</span>=<span class="string">"INTEGER"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"user_id"</span> <span class="attr">property</span>=<span class="string">"userId"</span> <span class="attr">jdbcType</span>=<span class="string">"INTEGER"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"role_name"</span> <span class="attr">property</span>=<span class="string">"roleName"</span> <span class="attr">jdbcType</span>=<span class="string">"VARCHAR"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selByUserIdRoles"</span> <span class="attr">resultMap</span>=<span class="string">"userRolesMap"</span>&gt;</span></span><br><span class="line">        select * from user_roles where user_id = #&#123;userId&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>权限</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.lijiajun.mapper.PermissionMapper"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 结果映射 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"rolesPermissionsMap"</span> <span class="attr">type</span>=<span class="string">"com.lijiajun.entity.Permissions"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span> <span class="attr">jdbcType</span>=<span class="string">"INTEGER"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"permission_name"</span> <span class="attr">property</span>=<span class="string">"permissionName"</span> <span class="attr">jdbcType</span>=<span class="string">"VARCHAR"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"role_id"</span> <span class="attr">property</span>=<span class="string">"roleId"</span> <span class="attr">jdbcType</span>=<span class="string">"INTEGER"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selByRoleIdPermission"</span> <span class="attr">resultMap</span>=<span class="string">"rolesPermissionsMap"</span>&gt;</span></span><br><span class="line">       select * from roles_permissions where role_id = #&#123;roleId&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="service层"><a href="#service层" class="headerlink" title="service层"></a>service层</h2><p><strong>同样不贴出接口,只将实现类贴出</strong></p><p><strong>用户</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据用户名和密码进行数据库数据匹配</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> username</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回一个相应于的用户</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">selByNameUser</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span>  userMapper.selByNameUser(username);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>角色</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RolesServiceImpl</span> <span class="keyword">implements</span> <span class="title">RolesService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RolesMapper rolesMapper;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询用户的角色, 此信息用于查询角色的权限</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Roles&gt; <span class="title">selByUserIdRoles</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> rolesMapper.selByUserIdRoles(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询用户所拥有的角色并转换为字符串，用作shiro中的角色权限</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Set&lt;String&gt; <span class="title">selByUserIdString</span><span class="params">(Integer userId)</span> </span>&#123;</span><br><span class="line">        List&lt;Roles&gt; roles = rolesMapper.selByUserIdRoles(userId);</span><br><span class="line">        <span class="keyword">return</span> SetStringUtil.listRoleConversion(roles);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>权限</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PermissionsServiceImpl</span> <span class="keyword">implements</span> <span class="title">PermissionsService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> PermissionMapper permissionMapper;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询角色所拥有的权限并转换为字符串，用作shiro中的角色权限</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> roleId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Set&lt;String&gt; <span class="title">selByRoleIdPermission</span><span class="params">(Integer roleId)</span> </span>&#123;</span><br><span class="line">        List&lt;Permissions&gt; permissions = permissionMapper.selByRoleIdPermission(roleId);</span><br><span class="line">        <span class="keyword">return</span> SetStringUtil.listPermissionConversion(permissions);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="controller层"><a href="#controller层" class="headerlink" title="controller层"></a>controller层</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IndexController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 访问用户列表页面</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/userInfo"</span>)</span><br><span class="line"><span class="meta">@RequiresPermissions</span>(<span class="string">"user:select"</span>)<span class="comment">//我的用户并没有这个权限，所以访问不了</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">userInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"userInfo"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 访问用户增加页面</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/userAdd"</span>)</span><br><span class="line"><span class="meta">@RequiresRoles</span>(<span class="string">"admins"</span>)<span class="comment">//我的用户并没有admin这个角色，所以访问不了</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">userAdd</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"userAdd"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 访问用户删除页面</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/userDelete"</span>)</span><br><span class="line"><span class="meta">@RequiresPermissions</span>(<span class="string">"user:delete"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">userDelete</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"userDelete"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 登陆逻辑</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/login"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">login</span><span class="params">(String username, String password, Model model)</span></span>&#123;</span><br><span class="line">        <span class="comment">//1.获取Subject</span></span><br><span class="line">        Subject subject = SecurityUtils.getSubject();</span><br><span class="line">        <span class="comment">//2.封装用户数据</span></span><br><span class="line">        UsernamePasswordToken token = <span class="keyword">new</span> UsernamePasswordToken(username,password);</span><br><span class="line">        <span class="comment">//3.执行登录方法</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//没发生异常代表登录成功   只要发生异常就代表登陆失败</span></span><br><span class="line">            subject.login(token);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"redirect:/test"</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnknownAccountException e) &#123;</span><br><span class="line">            <span class="comment">//此异常为用户名不存在</span></span><br><span class="line">            <span class="comment">//e.printStackTrace();</span></span><br><span class="line">            model.addAttribute(<span class="string">"msg"</span>,<span class="string">"用户名不存在"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"/login"</span>;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (IncorrectCredentialsException e)&#123;</span><br><span class="line">            <span class="comment">//此异常为密码错误</span></span><br><span class="line">            model.addAttribute(<span class="string">"msg"</span>,<span class="string">"密码错误"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"/login"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 跳转到登录页面</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/toLogin"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toLogin</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"/login"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 登出</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/logouts"</span>)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">logout</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"退出成功"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 跳转到用户登陆页面</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/test"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"/test"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="html页面"><a href="#html页面" class="headerlink" title="html页面"></a>html页面</h2><p><strong>登录页</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:th</span>=<span class="string">"http://www.thymeleaf.org"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Insert title here<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">th:text</span>=<span class="string">"$&#123;msg&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/login"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">用户名:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> /&gt;</span></span><br><span class="line">密码:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"password"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span>登陆<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>功能页</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">xmlns:shiro</span>=<span class="string">"http://www.w3.org/1999/xhtml"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>测试<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>进入用户列表功能: <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/userInfo"</span>&gt;</span>用户列表<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>进入用户新增功能: <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/userAdd"</span>&gt;</span>用户新增<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>进入用户删除功能: <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/userDelete"</span>&gt;</span>用户删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/logouts"</span>&gt;</span>退出<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>未授权提示页面</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>未授权提示页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">你没有权限访问</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>用户列表页</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Insert title here<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>用户信息列表<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>用户新增页</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Insert title here<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>添加用户<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>用户删除页</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Insert title here<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>删除用户<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id=&quot;分析Shiro的核心API&quot;&gt;&lt;a href=&quot;#分析Shiro的核心API&quot; class=&quot;headerlink&quot; title=&quot;分析Shiro的核心API&quot;&gt;&lt;/a&gt;分析Shiro的核心API&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Suject: 用户主体(认证,  授权等方法)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SecurityManager: 安全管理器&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Realm: Shiro连接数据库的桥梁&lt;/p&gt;
&lt;p&gt;这三个核心的API他们存在一种关系, &lt;strong&gt;Subject关联SecurityManager, 把操作交给SecurityManager, SecurityManager关联Realm, 将认证信息或授权信息进行与数据库或缓存的连接认证&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Shiro基础教程</title>
    <link href="http://yoursite.com/2019/07/20/Shiro%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    <id>http://yoursite.com/2019/07/20/Shiro基础教程/</id>
    <published>2019-07-20T01:19:20.000Z</published>
    <updated>2019-08-13T01:37:46.025Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h2 id="什么Shiro"><a href="#什么Shiro" class="headerlink" title="什么Shiro?"></a>什么Shiro?</h2><ol><li>Apache的强大灵活的开源安全框架</li><li>提供, 认证, 授权, 企业会话管理, 安全加密, 缓存管理</li></ol><p><strong>一般我们使用Shiro能够快捷方便的完成项目里的权限管理模块开发</strong></p><a id="more"></a><h2 id="Shiro与Spring-Security"><a href="#Shiro与Spring-Security" class="headerlink" title="Shiro与Spring Security"></a>Shiro与Spring Security</h2><table><thead><tr><th>Apache Shiro</th><th align="left">Spring Security</th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>简单,灵活,轻量级</td><td align="left">复杂,笨重,重量级</td><td></td><td></td><td></td><td></td></tr><tr><td>可脱离Spring</td><td align="left">不可脱离Spring</td><td></td><td></td><td></td><td></td></tr><tr><td>粒度较粗</td><td align="left">粒度更细</td><td></td><td></td><td></td><td></td></tr></tbody></table><p>我个人更喜欢用Shiro, 主要因为它比较简单, 灵活, 有些没有的功能我们可以自己去拓展. 权限粒度较粗这一块, 因为我们基本上是基于资源去做权限控制. 如果我们要做数据权限的话, 一定会和我们业务代码耦合, 所以Spring Security的控制粒度更细也没有体现出来, 或者说没有体现的很明显. 而且Spring的官网它也是用的Shiro做安全管理. </p><h2 id="Shiro整体架构"><a href="#Shiro整体架构" class="headerlink" title="Shiro整体架构"></a>Shiro整体架构</h2><p><img src="/2019/07/20/Shiro基础教程/Shiro%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B%5Ctimg.jpg" alt="在这里插入图片描述"></p><ul><li>首页最上面浅黄的部分可以理解为当前的—-操作用户</li></ul><p>Security Manager部分是我们Shiro的核心. 我们来看一下它的组件</p><ul><li>Authenticator(认证器)管理我们的登陆, 登出</li><li>Authorizer(授权器) 赋予我们主体的权限</li><li>SessionManager(会话管理器)可以不在不借助任何web容器下使用Session</li><li>SessionDAO(会话操作)提供了Session的操作, 主要是有增删改查</li><li>CacheManager(缓存管理器)利用缓存管理器可以缓存我们的角色数据和权限数据</li><li>PluggableRealms(插接式连接器)Shiro获取认证信息, 权限数据, 角色数据, 连接数据库</li><li>Cryptography(加密器)可以使用它, 非常快捷便利的行进加密</li></ul><p>用户提交请求到SecurityManager, SecurityManager调用认证器去做一个认证, 而认证器是通过插接式连接器, 从数据库中查询获取到认证信息. 授权器同样如此.</p><h2 id="Shiro认证"><a href="#Shiro认证" class="headerlink" title="Shiro认证"></a>Shiro认证</h2><ol><li>创建SecurityManager对象, 构建SecurityManager的环境</li><li>主体提交认证(也就是上图中的最上面部分,操作用户)到SecurityManager进行认证</li><li>SecurityManager调用Authenticator(认证器)进行认证, 进行认证的时候需要使用PluggableRealms(插接式连接器)获取认证数据, 然后再进行认证.</li></ol><p>认证小demo(可以改一下不正确的角色认证试试看会有什么效果)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">SimpleAccountRealm simpleAccountRealm = <span class="keyword">new</span> SimpleAccountRealm();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addUser</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//添加一个用户</span></span><br><span class="line">        simpleAccountRealm.addAccount(<span class="string">"ljj"</span>,<span class="string">"123"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAuthentication</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//1. 构建SecurityManager环境</span></span><br><span class="line">        DefaultSecurityManager manager = <span class="keyword">new</span> DefaultSecurityManager();</span><br><span class="line">        manager.setRealm(simpleAccountRealm);<span class="comment">//设置Realm环境</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//2. 主体提交认证请求</span></span><br><span class="line">        SecurityUtils.setSecurityManager(manager);<span class="comment">//设置SecurityManager环境</span></span><br><span class="line">        Subject subject = SecurityUtils.getSubject();<span class="comment">//获得主体</span></span><br><span class="line">        UsernamePasswordToken token = <span class="keyword">new</span> UsernamePasswordToken(<span class="string">"ljj"</span>,<span class="string">"123"</span>);<span class="comment">//存放验证数据</span></span><br><span class="line">        subject.login(token);<span class="comment">//进行验证</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//是否认证成功</span></span><br><span class="line">        System.out.println(subject.isAuthenticated());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//登出</span></span><br><span class="line">        subject.logout();</span><br><span class="line"></span><br><span class="line">        System.out.println(subject.isAuthenticated());</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="Shiro授权"><a href="#Shiro授权" class="headerlink" title="Shiro授权"></a>Shiro授权</h2><p>shiro授权和基本一致, 只不过是将Authenticator(认证器)更换成了Authorizer(授权器) </p><p>授权小demo (可以改一下不正确的角色权限试试看会有什么效果)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Before</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addUser</span><span class="params">()</span></span>&#123;</span><br><span class="line">       <span class="comment">//添加一个用户, 并赋予角色权限,可以有多个角色</span></span><br><span class="line">       simpleAccountRealm.addAccount(<span class="string">"ljj"</span>,<span class="string">"123"</span>,<span class="string">"admin"</span>,<span class="string">"user"</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAuthentication</span><span class="params">()</span></span>&#123;</span><br><span class="line">       <span class="comment">//1. 构建SecurityManager环境</span></span><br><span class="line">       DefaultSecurityManager manager = <span class="keyword">new</span> DefaultSecurityManager();</span><br><span class="line">       manager.setRealm(simpleAccountRealm);<span class="comment">//设置Realm环境</span></span><br><span class="line"></span><br><span class="line">       <span class="comment">//2. 主体提交认证请求</span></span><br><span class="line">       SecurityUtils.setSecurityManager(manager);<span class="comment">//设置SecurityManager环境</span></span><br><span class="line">       Subject subject = SecurityUtils.getSubject();<span class="comment">//获得主体</span></span><br><span class="line">       UsernamePasswordToken token = <span class="keyword">new</span> UsernamePasswordToken(<span class="string">"ljj"</span>,<span class="string">"123"</span>);<span class="comment">//存放验证数据</span></span><br><span class="line">       subject.login(token);<span class="comment">//进行验证</span></span><br><span class="line"></span><br><span class="line">       <span class="comment">//是否认证成功</span></span><br><span class="line">       System.out.println(subject.isAuthenticated());</span><br><span class="line"></span><br><span class="line">       <span class="comment">//权限认证, 单个是checkRole, 多个才要加 s</span></span><br><span class="line">       subject.checkRoles(<span class="string">"admin"</span>,<span class="string">"user"</span>);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h2 id="Shiro—IniRealm"><a href="#Shiro—IniRealm" class="headerlink" title="Shiro—IniRealm"></a>Shiro—IniRealm</h2><p>首页我们得在resources文件夹下创建一个*.ini文件<br><img src="/2019/07/20/Shiro基础教程/Shiro%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B%5C2019061820083868.png" alt="在这里插入图片描述"><br>内容如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[users]    //认证信息, 角色权限</span><br><span class="line">ljj=123,admin</span><br><span class="line">[roles]   //角色权限限制</span><br><span class="line">admin=user:delete,user:update</span><br></pre></td></tr></table></figure><p>java代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAuthentication</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//创建IniRealm对象</span></span><br><span class="line">        IniRealm iniRealm = <span class="keyword">new</span> IniRealm(<span class="string">"classpath:user.ini"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1. 构建SecurityManager环境</span></span><br><span class="line">        DefaultSecurityManager manager = <span class="keyword">new</span> DefaultSecurityManager();</span><br><span class="line">        manager.setRealm(iniRealm);<span class="comment">//设置Realm环境</span></span><br><span class="line">        <span class="comment">//2. 主体提交认证请求</span></span><br><span class="line">        SecurityUtils.setSecurityManager(manager);<span class="comment">//设置SecurityManager环境</span></span><br><span class="line">        Subject subject = SecurityUtils.getSubject();<span class="comment">//获得主体</span></span><br><span class="line">        UsernamePasswordToken token = <span class="keyword">new</span> UsernamePasswordToken(<span class="string">"ljj"</span>,<span class="string">"123"</span>);<span class="comment">//存放验证数据</span></span><br><span class="line">        subject.login(token);<span class="comment">//进行验证</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//是否认证成功</span></span><br><span class="line">        System.out.println(subject.isAuthenticated());</span><br><span class="line"></span><br><span class="line">        subject.checkRole(<span class="string">"admin"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//判断是否具有对应操作的权限</span></span><br><span class="line">        subject.checkPermission(<span class="string">"user:update"</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>大家可以尝试认证错误信息以及错误权限看看会发生什么情况</strong></p><h2 id="Shiro—-jdbcRealm"><a href="#Shiro—-jdbcRealm" class="headerlink" title="Shiro—-jdbcRealm"></a>Shiro—-jdbcRealm</h2><p>感谢大家的关注, 关于连接数据库进行认证与授权的教程我将在Shiro实战教程中去编写, 点个赞支持一下作者. </p><h2 id="Shiro—自定义"><a href="#Shiro—自定义" class="headerlink" title="Shiro—自定义"></a>Shiro—自定义</h2><p>自定义Realm需要继承于AuthorizingRealm, 并且实现它的两个方法, 如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 授权</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> principalCollection 授权信息</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">protected</span> AuthorizationInfo <span class="title">doGetAuthorizationInfo</span><span class="params">(PrincipalCollection principalCollection)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 认证</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> authenticationToken 认证信息</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    * <span class="doctag">@throws</span> AuthenticationException</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">protected</span> AuthenticationInfo <span class="title">doGetAuthenticationInfo</span><span class="params">(AuthenticationToken authenticationToken)</span> <span class="keyword">throws</span> AuthenticationException </span>&#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>如注释所描述一样, 在其方法中便可进行认证与授权了.</p><p><strong>认证</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomRealm</span> <span class="keyword">extends</span> <span class="title">AuthorizingRealm</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    Map&lt;String, String&gt; userMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    &#123;</span><br><span class="line">        userMap.put(<span class="string">"ljj"</span>,<span class="string">"123"</span>);</span><br><span class="line">        <span class="comment">//realmName可以随意取名</span></span><br><span class="line">        <span class="keyword">super</span>.setName(<span class="string">"customRealm"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 认证</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> authenticationToken 认证信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> AuthenticationException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> AuthenticationInfo <span class="title">doGetAuthenticationInfo</span><span class="params">(AuthenticationToken authenticationToken)</span> <span class="keyword">throws</span> AuthenticationException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.从主体传过来的认证信息中,获取用户名</span></span><br><span class="line">        String userName = (String) authenticationToken.getPrincipal();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.通过用户名到数据库中获取凭证</span></span><br><span class="line">        String password = getPasswordByUserName(userName);</span><br><span class="line">        <span class="comment">//如果不存在</span></span><br><span class="line">        <span class="keyword">if</span> (password == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        SimpleAuthenticationInfo authenticationInfo = <span class="keyword">new</span> SimpleAuthenticationInfo(</span><br><span class="line">                <span class="string">"ljj"</span>,password,<span class="string">"customRealm"</span>);</span><br><span class="line">        <span class="keyword">return</span> authenticationInfo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 模拟数据库查询凭证</span></span><br><span class="line"><span class="comment">     * 一般我们需要在这里连接数据进行验证, 由于我这只是一个小demo就直接写了一个map</span></span><br><span class="line"><span class="comment">     * 大家可以去连接数据库进行验证</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userName</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">getPasswordByUserName</span><span class="params">(String userName)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userMap.get(userName);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>测试类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAuthentication</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">       CustomRealm customRealm = <span class="keyword">new</span> CustomRealm();</span><br><span class="line"></span><br><span class="line">       <span class="comment">//1. 构建SecurityManager环境</span></span><br><span class="line">       DefaultSecurityManager manager = <span class="keyword">new</span> DefaultSecurityManager();</span><br><span class="line">       manager.setRealm(customRealm);<span class="comment">//配置环境</span></span><br><span class="line">       <span class="comment">//2. 主体提交认证请求</span></span><br><span class="line">       SecurityUtils.setSecurityManager(manager);<span class="comment">//设置SecurityManager环境</span></span><br><span class="line">       Subject subject = SecurityUtils.getSubject();<span class="comment">//获得主体</span></span><br><span class="line">       UsernamePasswordToken token = <span class="keyword">new</span> UsernamePasswordToken(<span class="string">"ljj"</span>,<span class="string">"123"</span>);<span class="comment">//存放验证数据</span></span><br><span class="line">       subject.login(token);<span class="comment">//进行验证</span></span><br><span class="line"></span><br><span class="line">       <span class="comment">//是否认证成功</span></span><br><span class="line">       System.out.println(subject.isAuthenticated());</span><br></pre></td></tr></table></figure><p><strong>授权:</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 授权</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> principalCollection 授权信息</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">protected</span> AuthorizationInfo <span class="title">doGetAuthorizationInfo</span><span class="params">(PrincipalCollection principalCollection)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">       String userName = (String) principalCollection.getPrimaryPrincipal();</span><br><span class="line">       <span class="comment">//从数据库或者缓存中获取角色数据</span></span><br><span class="line">       Set&lt;String&gt; roles = getRolesByUserName(userName);</span><br><span class="line">       <span class="comment">//从数据库或者缓存中获取权限数据</span></span><br><span class="line">       Set&lt;String&gt; permissions = getPermissionsByUserName(userName);</span><br><span class="line">       <span class="comment">//创建SimpleAuthorizationInfo对象, 返回得到的数据</span></span><br><span class="line">       SimpleAuthorizationInfo simpleAuthorizationInfo = <span class="keyword">new</span> SimpleAuthorizationInfo();</span><br><span class="line">       <span class="comment">//设置权限</span></span><br><span class="line">       simpleAuthorizationInfo.setStringPermissions(permissions);</span><br><span class="line">       <span class="comment">//设置角色</span></span><br><span class="line">       simpleAuthorizationInfo.setRoles(roles);</span><br><span class="line">       <span class="keyword">return</span> simpleAuthorizationInfo;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 模拟数据库查询权限</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> userName</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="function"><span class="keyword">private</span> Set&lt;String&gt; <span class="title">getPermissionsByUserName</span><span class="params">(String userName)</span> </span>&#123;</span><br><span class="line">       Set&lt;String&gt; sets = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">       sets.add(<span class="string">"user:delete"</span>);</span><br><span class="line">       sets.add(<span class="string">"user:add"</span>);</span><br><span class="line">       <span class="keyword">return</span> sets;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 模拟数据库查询授权</span></span><br><span class="line"><span class="comment">    * 这里和getPasswordByUserName一样</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> userName</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="function"><span class="keyword">private</span> Set&lt;String&gt; <span class="title">getRolesByUserName</span><span class="params">(String userName)</span> </span>&#123;</span><br><span class="line">       Set&lt;String&gt; sets = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">       sets.add(<span class="string">"admin"</span>);</span><br><span class="line">       sets.add(<span class="string">"user"</span>);</span><br><span class="line">       <span class="keyword">return</span> sets;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>测试类<br>在认证测试类中加上这两句, 同样,大家可以尝试一下错误的认证与授权, 看看会发生什么情况</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//判断是否具有此角色信息</span></span><br><span class="line">subject.checkRole(<span class="string">"admin"</span>);</span><br><span class="line">    <span class="comment">//判断是否具有对应操作的权限</span></span><br><span class="line">   subject.checkPermissions(<span class="string">"user:add"</span>,<span class="string">"user:delete"</span>);</span><br></pre></td></tr></table></figure><h2 id="Shiro—加密"><a href="#Shiro—加密" class="headerlink" title="Shiro—加密"></a>Shiro—加密</h2><p><strong>Shiro散列配置</strong></p><ul><li>HashedCredentialsMatcher </li><li>自定义Realm中使用散列</li><li>盐的使用</li></ul><p>首先我们先要创建一个HashedCredentialsMatcher工具类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAuthentication</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        CustomRealm customRealm = <span class="keyword">new</span> CustomRealm();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1. 构建SecurityManager环境</span></span><br><span class="line">        DefaultSecurityManager manager = <span class="keyword">new</span> DefaultSecurityManager();</span><br><span class="line">        manager.setRealm(customRealm);<span class="comment">//配置环境</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建工具类</span></span><br><span class="line">        HashedCredentialsMatcher matcher = <span class="keyword">new</span> HashedCredentialsMatcher();</span><br><span class="line">        <span class="comment">//设置加密的名称,加密方式</span></span><br><span class="line">        matcher.setHashAlgorithmName(<span class="string">"md5"</span>);</span><br><span class="line">        <span class="comment">//设置加密的次数</span></span><br><span class="line">        matcher.setHashIterations(<span class="number">1</span>);</span><br><span class="line">        <span class="comment">//在自定义的Realm中配置HashedCredentialsMatcher对象</span></span><br><span class="line">        customRealm.setCredentialsMatcher(matcher);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//2. 主体提交认证请求</span></span><br><span class="line">        SecurityUtils.setSecurityManager(manager);<span class="comment">//设置SecurityManager环境</span></span><br><span class="line">        Subject subject = SecurityUtils.getSubject();<span class="comment">//获得主体</span></span><br><span class="line">        UsernamePasswordToken token = <span class="keyword">new</span> UsernamePasswordToken(<span class="string">"ljj"</span>,<span class="string">"123"</span>);<span class="comment">//存放验证数据</span></span><br><span class="line">        subject.login(token);<span class="comment">//进行验证</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//是否认证成功</span></span><br><span class="line">        System.out.println(subject.isAuthenticated());</span><br><span class="line"></span><br><span class="line"><span class="comment">//        subject.checkRole("admin");</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        //判断是否具有对应操作的权限</span></span><br><span class="line"><span class="comment">//        subject.checkPermissions("user:add","user:delete");</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>在自定义类中创建main方法, 使用md5获得加密后的密码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">      <span class="comment">//得到加密数据</span></span><br><span class="line">      Md5Hash md5Hash = <span class="keyword">new</span> Md5Hash(<span class="string">"123"</span>);</span><br><span class="line">      System.out.println(md5Hash.toString());</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>更改map里的密码为加密后的数据(数据库里的密码都是经过加密的只不过我这里的map是用来模拟)</p><p>但是由于密码只进行了一次加密, 安全级别还是达不到我们所需要的级别, 所以我们需要进行加盐.<br>获得加盐数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">       <span class="comment">//得到加盐数据</span></span><br><span class="line">       Md5Hash md5Hash = <span class="keyword">new</span> Md5Hash(<span class="string">"123"</span>,<span class="string">"ljj"</span>);</span><br><span class="line">       System.out.println(md5Hash.toString());</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>更改map里面的密码<br>我们还需要在认证方法中添加这样一句代码<br>authenticationInfo.setCredentialsSalt(ByteSource.Util.bytes(“ljj”)); 需要把所加的盐设置进SimpleAuthenticationInfo</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 认证</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> authenticationToken 认证信息</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">   * <span class="doctag">@throws</span> AuthenticationException</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> AuthenticationInfo <span class="title">doGetAuthenticationInfo</span><span class="params">(AuthenticationToken authenticationToken)</span> <span class="keyword">throws</span> AuthenticationException </span>&#123;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//1.从主体传过来的认证信息中,获取用户名</span></span><br><span class="line">      String userName = (String) authenticationToken.getPrincipal();</span><br><span class="line"></span><br><span class="line">      <span class="comment">//2.通过用户名到数据库中获取凭证</span></span><br><span class="line">      String password = getPasswordByUserName(userName);</span><br><span class="line">      <span class="comment">//如果不存在</span></span><br><span class="line">      <span class="keyword">if</span> (password == <span class="keyword">null</span>) &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">//创建SimpleAuthenticationInfo,返回数据</span></span><br><span class="line">      SimpleAuthenticationInfo authenticationInfo = <span class="keyword">new</span> SimpleAuthenticationInfo(</span><br><span class="line">              <span class="string">"ljj"</span>, password, <span class="string">"customRealm"</span>);</span><br><span class="line">      <span class="comment">//需要把所加的盐设置进来               直接将字符串转换成ByteSource对象</span></span><br><span class="line">      authenticationInfo.setCredentialsSalt(ByteSource.Util.bytes(<span class="string">"ljj"</span>));</span><br><span class="line">      <span class="keyword">return</span> authenticationInfo;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id=&quot;什么Shiro&quot;&gt;&lt;a href=&quot;#什么Shiro&quot; class=&quot;headerlink&quot; title=&quot;什么Shiro?&quot;&gt;&lt;/a&gt;什么Shiro?&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Apache的强大灵活的开源安全框架&lt;/li&gt;
&lt;li&gt;提供, 认证, 授权, 企业会话管理, 安全加密, 缓存管理&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;一般我们使用Shiro能够快捷方便的完成项目里的权限管理模块开发&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>hexo安装教程</title>
    <link href="http://yoursite.com/2019/07/02/hexo%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
    <id>http://yoursite.com/2019/07/02/hexo安装教程/</id>
    <published>2019-07-02T05:30:42.000Z</published>
    <updated>2019-08-13T01:35:17.734Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h1 id="1-node-js下载"><a href="#1-node-js下载" class="headerlink" title="1. node.js下载"></a>1. node.js下载</h1><p><img src="/2019/07/02/hexo安装教程/1.png" alt="1"></p><p>安装很简单, 选择好目录然后下一步下一步即可.</p><a id="more"></a><p>查看版本, 有则安装成功</p> <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Windows</span>\<span class="title">system32</span>&gt;<span class="title">node</span> -<span class="title">v</span></span></span><br><span class="line"><span class="function"><span class="title">v10</span>.15.3</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">C</span>:\<span class="title">Windows</span>\<span class="title">system32</span>&gt;<span class="title">npm</span> -<span class="title">v</span></span></span><br><span class="line"><span class="function">6.4.1</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">更改镜像为国内淘宝的</span></span><br><span class="line"><span class="function"><span class="title">C</span>:\<span class="title">Windows</span>\<span class="title">system32</span>&gt;<span class="title">npm</span> <span class="title">install</span> -<span class="title">g</span> --<span class="title">registry</span>=<span class="title">https</span>://<span class="title">registry.npm.taobao.org</span></span></span><br></pre></td></tr></table></figure><h1 id="2-下载hexo"><a href="#2-下载hexo" class="headerlink" title="2. 下载hexo"></a>2. 下载hexo</h1><p>接下来我们可以来下载hexo</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Windows</span>\<span class="title">system32</span>&gt;<span class="title">cnpm</span> <span class="title">install</span> -<span class="title">g</span> <span class="title">hexo</span>-<span class="title">cli</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">查看版本</span></span><br><span class="line"><span class="function"><span class="title">C</span>:\<span class="title">Windows</span>\<span class="title">system32</span>&gt;<span class="title">hexo</span> -<span class="title">v</span></span></span><br><span class="line"><span class="function"><span class="title">hexo</span>-<span class="title">cli</span>: 2.0.0</span></span><br><span class="line"><span class="function"><span class="title">os</span>: <span class="title">Windows_NT</span> 10.0.17134 <span class="title">win32</span> <span class="title">x64</span></span></span><br><span class="line"><span class="function"><span class="title">http_parser</span>: 2.8.0</span></span><br><span class="line"><span class="function"><span class="title">node</span>: 10.15.3</span></span><br><span class="line"><span class="function"><span class="title">v8</span>: 6.8.275.32-<span class="title">node</span>.51</span></span><br><span class="line"><span class="function"><span class="title">uv</span>: 1.23.2</span></span><br><span class="line"><span class="function"><span class="title">zlib</span>: 1.2.11</span></span><br><span class="line"><span class="function"><span class="title">ares</span>: 1.15.0</span></span><br><span class="line"><span class="function"><span class="title">modules</span>: 64</span></span><br><span class="line"><span class="function"><span class="title">nghttp2</span>: 1.34.0</span></span><br><span class="line"><span class="function"><span class="title">napi</span>: 3</span></span><br><span class="line"><span class="function"><span class="title">openssl</span>: 1.1.0<span class="title">j</span></span></span><br><span class="line"><span class="function"><span class="title">icu</span>: 62.1</span></span><br><span class="line"><span class="function"><span class="title">unicode</span>: 11.0</span></span><br><span class="line"><span class="function"><span class="title">cldr</span>: 33.1</span></span><br><span class="line"><span class="function"><span class="title">tz</span>: 2018<span class="title">e</span></span></span><br></pre></td></tr></table></figure><p>ok, 安装成功. 我们现在需要创建一个名叫 blog 的文件夹 用来存放我们的博客以及配置文件</p><p>如: 我创建在 D:\大型文件\blog</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">初始化</span><br><span class="line"><span class="function">D:\大型文件\<span class="title">blog</span>&gt;<span class="title">hexo</span> <span class="title">init</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">初始化成功后运行 现在我们来访问它给出的路径便可</span></span><br><span class="line"><span class="function"><span class="title">D</span>:\大型文件\<span class="title">blog</span>&gt;<span class="title">hexo</span> <span class="title">s</span></span></span><br><span class="line"><span class="function"><span class="title">INFO</span>  <span class="title">Start</span> <span class="title">processing</span></span></span><br><span class="line"><span class="function"><span class="title">INFO</span>  <span class="title">Hexo</span> <span class="title">is</span> <span class="title">running</span> <span class="title">at</span> <span class="title">http</span>://<span class="title">localhost</span>:4000 . <span class="title">Press</span> <span class="title">Ctrl</span>+<span class="title">C</span> <span class="title">to</span> <span class="title">stop</span>.</span></span><br></pre></td></tr></table></figure><h1 id="3-创建博客"><a href="#3-创建博客" class="headerlink" title="3.创建博客"></a>3.创建博客</h1><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">D:\大型文件\<span class="title">blog</span>&gt;<span class="title">hexo</span> <span class="title">new</span> "我的第一篇文章"</span></span><br><span class="line"><span class="function"><span class="title">INFO</span>  <span class="title">Created</span>: <span class="title">D</span>:\大型文件\<span class="title">blog</span>\<span class="title">source</span>\<span class="title">_posts</span>\我的第一篇文章.<span class="title">md</span></span></span><br><span class="line"><span class="function">此时我们便以及创建好了自己的博客,可以通过给出的路径找到.以后我们所写的博客都在这个文件夹中</span></span><br></pre></td></tr></table></figure><p>推荐大家下载 Typora 来编写自己的博客</p><p>此时我已经在新创建的博客中添加了一些内容, 现在我们需要访问它</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">清除缓存</span><br><span class="line"><span class="function">D:\大型文件\<span class="title">blog</span>&gt;<span class="title">hexo</span> <span class="title">clean</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">重新加载</span></span><br><span class="line"><span class="function"><span class="title">D</span>:\大型文件\<span class="title">blog</span>&gt;<span class="title">hexo</span> <span class="title">g</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">运行</span></span><br><span class="line"><span class="function"><span class="title">D</span>:\大型文件\<span class="title">blog</span>&gt;<span class="title">hexo</span> <span class="title">s</span></span></span><br><span class="line"><span class="function"><span class="title">INFO</span>  <span class="title">Start</span> <span class="title">processing</span></span></span><br><span class="line"><span class="function"><span class="title">INFO</span>  <span class="title">Hexo</span> <span class="title">is</span> <span class="title">running</span> <span class="title">at</span> <span class="title">http</span>://<span class="title">localhost</span>:4000 . <span class="title">Press</span> <span class="title">Ctrl</span>+<span class="title">C</span> <span class="title">to</span> <span class="title">stop</span>.</span></span><br></pre></td></tr></table></figure><p>现在我们再次访问一下</p><p><img src="/2019/07/02/hexo安装教程/2.png" alt="2"></p><h1 id="4-推送至GitHub"><a href="#4-推送至GitHub" class="headerlink" title="4. 推送至GitHub"></a>4. 推送至GitHub</h1><p>之前我们是在本地进行访问的, 我们来将它推送至GitHub上便可通过网络进行访问</p><p>首先我们需要下载好git <a href="https://git-scm.com/downloads" target="_blank" rel="noopener">https://git-scm.com/downloads</a></p><p><img src="/2019/07/02/hexo安装教程/3.png" alt="3"></p><p><img src="/2019/07/02/hexo安装教程/4.png" alt="4"></p><p>注意安装的路径中不能有中文, 否则无法提交</p><h3 id="4-1-注册GitHub"><a href="#4-1-注册GitHub" class="headerlink" title="4.1 注册GitHub"></a>4.1 注册GitHub</h3><p>注册一个GitHub账号后创建一个新的仓库</p><p><img src="/2019/07/02/hexo安装教程/5.png" alt="5"></p><p><img src="/2019/07/02/hexo安装教程/6.png" alt="6"></p><p>以后我们访问都是以仓库路径来访问 如: <a href="https://errorprones.github.io/" target="_blank" rel="noopener">https://errorprones.github.io/</a></p><p>创建好后我们需要下载一个插件</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">D:\大型文件\<span class="title">blog</span>&gt;<span class="title">cnpm</span> <span class="title">install</span> --<span class="title">save</span> <span class="title">hexo</span>-<span class="title">deployer</span>-<span class="title">git</span></span></span><br></pre></td></tr></table></figure><h3 id="4-2-设置配置文件"><a href="#4-2-设置配置文件" class="headerlink" title="4.2 设置配置文件"></a>4.2 设置配置文件</h3><p>打开blog文件夹, 编辑 _config.yml文件, 到文件的最底部配置 </p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># type: git提交 repo 远程仓库地址  branch 选择分支</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repo:</span> <span class="attr">https://github.com/ErrorPrones/ErrorPrones.github.io.git</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>注意yml文件的格式  每个: 后面要加一个空格, 设置好后保存退出</p><p>部署到GitHub上</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">D:\大型文件\<span class="title">blog</span>&gt;<span class="title">hexo</span> <span class="title">d</span></span></span><br></pre></td></tr></table></figure><p>第一次提交会让你输入账号密码, 大家输入即可. 提交完成后刷新仓库, 然后<strong>通过仓库名去访问</strong></p><p><img src="/2019/07/02/hexo安装教程/7.png" alt="7"></p><p>找不到页面,等一会再刷新即可, 会有一些延迟</p><h1 id="5-更改主题"><a href="#5-更改主题" class="headerlink" title="5. 更改主题"></a>5. 更改主题</h1><p>在GitHub上有一个主题热度比较火, 我个人现在也在用 <a href="https://github.com/litten/hexo-theme-yilia" target="_blank" rel="noopener">https://github.com/litten/hexo-theme-yilia</a>可以下载这个. 或者也可以去<a href="https://hexo.io/themes/" target="_blank" rel="noopener">https://hexo.io/themes/</a>官网下载</p><p>首先我们先切换到blog文件夹中, 注意: 我们的操作都是要基于blog来进行的. 如果觉得有问题或者不想用了都可以直接干掉它.</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">下载主题</span><br><span class="line"><span class="function">D:\大型文件\<span class="title">blog</span>&gt; <span class="title">git</span> <span class="title">clone</span> <span class="title">https</span>://<span class="title">github.com</span>/<span class="title">litten</span>/<span class="title">hexo</span>-<span class="title">theme</span>-<span class="title">yilia.git</span> <span class="title">themes</span>/<span class="title">yilia</span></span></span><br></pre></td></tr></table></figure><h3 id="5-1主题切换"><a href="#5-1主题切换" class="headerlink" title="5.1主题切换"></a>5.1主题切换</h3><p>打开blog文件夹, 编辑 _config.yml文件, 找到文件中的theme: 修改如下</p><p><img src="/2019/07/02/hexo安装教程/8.png" alt="8"></p><p>修改后保存我们看看下载好的主题</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">清除缓存</span><br><span class="line"><span class="function">D:\大型文件\<span class="title">blog</span>&gt;<span class="title">hexo</span> <span class="title">clean</span></span></span><br><span class="line"><span class="function">重新部署</span></span><br><span class="line"><span class="function"><span class="title">D</span>:\大型文件\<span class="title">blog</span>&gt;<span class="title">hexo</span> <span class="title">g</span></span></span><br><span class="line"><span class="function">运行</span></span><br><span class="line"><span class="function"><span class="title">D</span>:\大型文件\<span class="title">blog</span>&gt;<span class="title">hexo</span> <span class="title">s</span></span></span><br><span class="line"><span class="function"><span class="title">INFO</span>  <span class="title">Start</span> <span class="title">processing</span></span></span><br><span class="line"><span class="function"><span class="title">INFO</span>  <span class="title">Hexo</span> <span class="title">is</span> <span class="title">running</span> <span class="title">at</span> <span class="title">http</span>://<span class="title">localhost</span>:4000 . <span class="title">Press</span> <span class="title">Ctrl</span>+<span class="title">C</span> <span class="title">to</span> <span class="title">stop</span>.</span></span><br></pre></td></tr></table></figure><p>再次访问主题便已经更改了</p><h3 id="5-2推送到GitHub"><a href="#5-2推送到GitHub" class="headerlink" title="5.2推送到GitHub"></a>5.2推送到GitHub</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">D:\大型文件\<span class="title">blog</span>&gt;<span class="title">hexo</span> <span class="title">d</span></span></span><br></pre></td></tr></table></figure><p>每次推送它并不是立马有效果, 会有一些延迟, 大家多刷新几次即可</p><p>当然除了这一种推送方法, 其实还可以使用git的命令进行推送, 有兴趣的朋友自己去试试</p><h1 id="6-主题修改"><a href="#6-主题修改" class="headerlink" title="6.主题修改"></a>6.主题修改</h1><h3 id="6-1-所有文章"><a href="#6-1-所有文章" class="headerlink" title="6.1 所有文章"></a>6.1 所有文章</h3><p>点击页面中的所有文章, 会出现这样一个页面</p><p><img src="/2019/07/02/hexo安装教程/9.png" alt="9"></p><p>根据指示进行操作即可</p><p><strong>注意</strong>根据以上步骤操作完后,有可能会有如下错误</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">D:\大型文件\<span class="title">blog</span>&gt;<span class="title">hexo</span> <span class="title">d</span></span></span><br><span class="line"><span class="function"><span class="title">ERROR</span> <span class="title">Plugin</span> <span class="title">load</span> <span class="title">failed</span>: <span class="title">hexo</span>-<span class="title">deployer</span>-<span class="title">git</span></span></span><br><span class="line"><span class="function"><span class="title">Error</span>: <span class="title">ENOENT</span>: <span class="title">no</span> <span class="title">such</span> <span class="title">file</span> <span class="title">or</span> <span class="title">directory</span>, <span class="title">open</span> '<span class="title">D</span>:\大型文件\<span class="title">blog</span>\<span class="title">node_modules</span>\<span class="title">hexo</span>-<span class="title">deployer</span>-<span class="title">git</span>'</span></span><br><span class="line"><span class="function"><span class="title">ERROR</span> <span class="title">Deployer</span> <span class="title">not</span> <span class="title">found</span>: <span class="title">git</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">执行这段命令即可</span></span><br><span class="line"><span class="function"><span class="title">D</span>:\大型文件\<span class="title">blog</span>&gt; <span class="title">cnpm</span> <span class="title">install</span> <span class="title">hexo</span>-<span class="title">deployer</span>-<span class="title">git</span> --<span class="title">save</span></span></span><br><span class="line"><span class="function">| [0/1] <span class="title">Installing</span> <span class="title">is</span>-<span class="title">buffer</span>@^1.1.5<span class="title">platform</span> <span class="title">unsupported</span> <span class="title">hexo</span>-<span class="title">deployer</span>-<span class="title">git</span>@1.0.0 › <span class="title">hexo</span>-<span class="title">fs</span>@1.0.2 › <span class="title">chokidar</span>@2.1.6 › <span class="title">fsevents</span>@^1.2.7 <span class="title">Package</span> <span class="title">require</span> <span class="title">os</span>(<span class="title">darwin</span>) <span class="title">not</span> <span class="title">compatible</span> <span class="title">with</span> <span class="title">your</span> <span class="title">platform</span>(<span class="title">win32</span>)</span></span><br><span class="line"><span class="function">[<span class="title">fsevents</span>@^1.2.7] <span class="title">optional</span> <span class="title">install</span> <span class="title">error</span>: <span class="title">Package</span> <span class="title">require</span> <span class="title">os</span>(<span class="title">darwin</span>) <span class="title">not</span> <span class="title">compatible</span> <span class="title">with</span> <span class="title">your</span> <span class="title">platform</span>(<span class="title">win32</span>)</span></span><br><span class="line"><span class="function">√ <span class="title">Installed</span> 1 <span class="title">packages</span></span></span><br><span class="line"><span class="function">√ <span class="title">Linked</span> 57 <span class="title">latest</span> <span class="title">versions</span></span></span><br><span class="line"><span class="function">√ <span class="title">Run</span> 0 <span class="title">scripts</span></span></span><br><span class="line"><span class="function"><span class="title">Recently</span> <span class="title">updated</span> (<span class="title">since</span> 2019-06-25): 1 <span class="title">packages</span> (<span class="title">detail</span> <span class="title">see</span> <span class="title">file</span> <span class="title">D</span>:\大型文件\<span class="title">blog</span>\<span class="title">node_modules</span>\.<span class="title">recently_updates.txt</span>)</span></span><br><span class="line"><span class="function">√ <span class="title">All</span> <span class="title">packages</span> <span class="title">installed</span> (36 <span class="title">packages</span> <span class="title">installed</span> <span class="title">from</span> <span class="title">npm</span> <span class="title">registry</span>, <span class="title">used</span> 3<span class="title">s</span>(<span class="title">network</span> 3<span class="title">s</span>), <span class="title">speed</span> 44.68<span class="title">kB</span>/<span class="title">s</span>, <span class="title">json</span> 58(129.71<span class="title">kB</span>), <span class="title">tarball</span> 0<span class="title">B</span>)</span></span><br></pre></td></tr></table></figure><p>完成后便可进行查找博客</p><p><img src="/2019/07/02/hexo安装教程/10.png" alt="10"></p><h3 id="6-2设置头像-打赏码图片"><a href="#6-2设置头像-打赏码图片" class="headerlink" title="6.2设置头像,打赏码图片"></a>6.2设置头像,打赏码图片</h3><p>进入themes/yilia文件夹, 编辑 _config.yml(注意不要和blog文件夹中的 _config搞混了)</p><p>在blog\themes\yilia\source文件夹中创建一个文件夹来存放图片, 更改头像路径如下: </p><p><img src="/2019/07/02/hexo安装教程/11.png" alt="11"></p><p>打赏码同样操作</p><p><img src="/2019/07/02/hexo安装教程/12.png" alt="12"></p><h3 id="6-3-添加音乐"><a href="#6-3-添加音乐" class="headerlink" title="6.3 添加音乐"></a>6.3 添加音乐</h3><p>其实就是把网易云歌曲的外链放入到页面中<br>打开网页版网易云音乐, 找到你喜欢的一首歌并播放 </p><p><img src="/2019/07/02/hexo安装教程/13.png" alt="13"></p><p>复制代码</p><p><img src="/2019/07/02/hexo安装教程/14.png" alt="14"></p><p>修改yilia主题目录layout\_partial文件夹下的left-col.ejs文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;nav class=&quot;header-nav&quot;&gt;</span><br><span class="line">&lt;div class=&quot;social&quot;&gt;</span><br><span class="line">&lt;% for (var i in theme.subnav)&#123; %&gt;</span><br><span class="line">&lt;a class=&quot;&lt;%= i %&gt;&quot; target=&quot;_blank&quot; href=&quot;&lt;%- url_for(theme.subnav[i]) %&gt;&quot; title=&quot;&lt;%= i %&gt;&quot;&gt;&lt;i class=&quot;icon-&lt;%= i %&gt;&quot;&gt;&lt;/i&gt;&lt;/a&gt;</span><br><span class="line">&lt;%&#125;%&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">    添加一个div粘贴进去</span><br><span class="line">&lt;div style=&quot;position:absolute; bottom:-120px;left:auto;width:85%&quot;&gt;</span><br><span class="line">       &lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=330 height=86 src=&quot;//music.163.com/outchain/player?type=2&amp;id=5027380&amp;auto=1&amp;height=66&quot;&gt;&lt;/iframe&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/nav&gt;</span><br></pre></td></tr></table></figure><p>效果图如下:</p><p><img src="/2019/07/02/hexo安装教程/15.png" alt="15"></p><h3 id="6-4-记录访问量"><a href="#6-4-记录访问量" class="headerlink" title="6.4 记录访问量"></a>6.4 记录访问量</h3><p>使用友盟第三方的统计插件，网址：`<a href="https://www.umeng.com/" target="_blank" rel="noopener">https://www.umeng.com/</a><br>进入网站先注册账号然后根据下列图片进入添加站点。</p><p><img src="/2019/07/02/hexo安装教程/16.png" alt="16"></p><p>然后点击  立即使用</p><p><img src="/2019/07/02/hexo安装教程/17.png" alt="17"></p><p>编辑 blog\themes\yilia\layout_partial 中的 footer.ejs 文件, 将复制好的代码粘贴进去</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;footer id=&quot;footer&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;outer&quot;&gt;</span><br><span class="line">    &lt;div id=&quot;footer-info&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;footer-left&quot;&gt;</span><br><span class="line">    &amp;copy; &lt;%= date(new Date(), &apos;YYYY&apos;) %&gt; &lt;%= config.author || config.title %&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;footer-right&quot;&gt;</span><br><span class="line">      &lt;a href=&quot;http://hexo.io/&quot; target=&quot;_blank&quot;&gt;Hexo&lt;/a&gt;  Theme &lt;a href=&quot;https://github.com/litten/hexo-theme-yilia&quot; target=&quot;_blank&quot;&gt;Yilia&lt;/a&gt; by Litten</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">    上面是原文</span><br><span class="line">    注意, 需要创建一个div</span><br><span class="line">    下面是添加的</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;var cnzz_protocol = ((&quot;https:&quot; == document.location.protocol) ? &quot;https://&quot; : &quot;http://&quot;);document.write(unescape(&quot;%3Cspan id=&apos;cnzz_stat_icon_1277776258&apos;%3E%3C/span%3E%3Cscript src=&apos;&quot; + cnzz_protocol + &quot;s23&quot;));&lt;/script&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/footer&gt;</span><br></pre></td></tr></table></figure><p>效果图</p><p><img src="/2019/07/02/hexo安装教程/18.png" alt="18"></p><p>接下来保存便可推送至远程仓库</p><p>注意: 推送远程仓库三个步骤, 不要搞反了</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">清除缓存</span><br><span class="line"><span class="function">D:\大型文件\<span class="title">blog</span>&gt;<span class="title">hexo</span> <span class="title">clean</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">加载文件</span></span><br><span class="line"><span class="function"><span class="title">D</span>:\大型文件\<span class="title">blog</span>&gt;<span class="title">hexo</span> <span class="title">g</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">推送至<span class="title">github</span></span></span><br><span class="line"><span class="function"><span class="title">D</span>:\大型文件\<span class="title">blog</span>&gt;<span class="title">hexo</span> <span class="title">d</span></span></span><br></pre></td></tr></table></figure><h3 id="6-5-上传图片到博客"><a href="#6-5-上传图片到博客" class="headerlink" title="6.5 上传图片到博客"></a>6.5 上传图片到博客</h3><p>编辑 blog\_config.yml 文件 如下图:  (注释打错了, 应为<strong>打开资源文件</strong>)因为早已截图下来了,不想再去截图所有偷个懒 , 2333333333</p><p><img src="/2019/07/02/hexo安装教程/19.png" alt="19"></p><p>进入 blog\source\_posts文件夹, 可以看到我们所写的博客,然后创建一个文件夹与博客名相同(主要是为了区分和查找), 所有图片便可放在这个创建的文件夹之中了</p><p><img src="/2019/07/02/hexo安装教程/20.png" alt="20"></p><p>将Typora中图片的路径改为  文件夹名\文件名</p><p><img src="/2019/07/02/hexo安装教程/21.png" alt="21"></p><h3 id="6-6-背景动画"><a href="#6-6-背景动画" class="headerlink" title="6.6 背景动画"></a>6.6 背景动画</h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1 id=&quot;1-node-js下载&quot;&gt;&lt;a href=&quot;#1-node-js下载&quot; class=&quot;headerlink&quot; title=&quot;1. node.js下载&quot;&gt;&lt;/a&gt;1. node.js下载&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/2019/07/02/hexo安装教程/1.png&quot; alt=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;安装很简单, 选择好目录然后下一步下一步即可.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
